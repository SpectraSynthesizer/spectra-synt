spec Wash_dry

define NUM_MODES := 5;

env boolean startWash; // Wash 
env boolean startDry; // Dry
env boolean setHot; // Heat
env boolean setDelay; // Delay

sys boolean atTemp; // Heat
sys boolean locked; // True
sys boolean[NUM_MODES] modes; // Domain-Knowledge
	define idle := modes[0];
	define washing := modes[1];
	define drying := modes[2];
	define heating := modes[3];
	define waiting := modes[4];

-- Universal Assumptions 

-- Feature-level Assumptions
asm WashPressedLive: alwEv(startWash); // Wash
asm WashNotPressedLive: alwEv(!startWash);  // Wash 
asm DryNotPressedLive: alwEv(!startDry); // Dry

-- Universal Guarantees
gar modes_mutex:
	alw(forall i in Int(0..(NUM_MODES-1)) . forall j in Int(0..(NUM_MODES-1)) . (i!=j) -> !(modes[i] & modes[j]));


-- Feature-level Guarantees
gar WashButtonSafety: alw(startWash and idle implies next(washing));  // Wash

gar WashOffLive: alwEv(!washing); // Wash
gar WashLockSafety: alw(washing implies locked);  // Wash

gar DryOffLive: alwEv(!drying); // Dry
gar DryButtonSafety: alw(startDry and idle implies next(drying)); // Dry
gar DryLockSafety: alw(drying implies locked); // Dry

// TODO : Mutex Assumptions
//@feature WashDry {
//	guarantees: WashButtonSafety, WashOffLive, WashLockSafety
//	+ DryButtonSafety, DryOffLive, DryLockSafety
//	assumptions: WashPressedLive, WashNotPressedLive
//	+ DryNotPressedLive
//}
